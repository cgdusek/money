syntax = "proto3";
package onomyprotocol.market.market;

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/onomyprotocol/market/x/market/types";

// Msg defines the Msg service.
service Msg {
      rpc CreatePool(MsgCreatePool) returns (MsgCreatePoolResponse);
  rpc CreateDrop(MsgCreateDrop) returns (MsgCreateDropResponse);
  rpc RedeemDrop(MsgRedeemDrop) returns (MsgRedeemDropResponse);
  rpc CreateOrder(MsgCreateOrder) returns (MsgCreateOrderResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgCreatePool {
  string creator = 1;
  string coinA = 2;
  string coinB = 3;
}

message MsgCreatePoolResponse {
}

message MsgCreateDrop {
  string creator = 1;
  string pair = 2;
  string drops = 3;
}

message MsgCreateDropResponse {
}

message MsgRedeemDrop {
  string creator = 1;
  string uid = 2;
}

message MsgRedeemDropResponse {
}

message MsgCreateOrder {
  string creator = 1;
  string denomAsk = 2;
  string denomBid = 3;
  string orderType = 4;
  string amount = 5;
  repeated string rate = 6;
  string prev = 7;
  string next = 8;
}

message MsgCreateOrderResponse {
}

// this line is used by starport scaffolding # proto/tx/message